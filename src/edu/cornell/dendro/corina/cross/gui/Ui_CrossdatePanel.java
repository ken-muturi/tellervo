/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ui_CrossdatePanel.java
 *
 * Created on Jul 13, 2009, 12:28:07 PM
 */

package edu.cornell.dendro.corina.cross.gui;

import java.awt.Component;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JSplitPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.ScrollPaneConstants;
import javax.swing.table.DefaultTableModel;

import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;

import edu.cornell.dendro.corina.ui.Builder;

/**
 *
 * @author Lucas Madar
 */
public class Ui_CrossdatePanel extends javax.swing.JPanel {

	private static final long serialVersionUID = 1L;
	
	/** Creates new form Ui_CrossdatePanel */
    public Ui_CrossdatePanel() {
        initComponents();
        
        btnSwap.setIcon(Builder.getIcon("swap.png", "Icons"));
        btnSwap.setText(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneTablesAndCharts = new JSplitPane();
        paneStatistics = new JTabbedPane();
        panelSignificantScores = new JPanel();
        scrollSignificantScores = new JScrollPane();
        tableSignificantScores = new JTable();
        panelAllScores = new JPanel();
        lblAllScoreValuesFor = new JLabel();
        cboDisplayStats = new JComboBox();
        scrollAllScores = new JScrollPane();
        tblAllScores = new JTable();
        panelHistogram = new JPanel();
        lblHistogramForm = new JLabel();
        cboDisplayHistogram = new JComboBox();
        scrollHistogram = new JScrollPane();
        tblHistogram = new JTable();
        panelChart = new JPanel();
        panelSelections = new JPanel();
        cboSecondary = new JComboBox();
        lblSecondary = new JLabel();
        btnSwap = new JButton();
        cboPrimary = new JComboBox();
        lblPrimary = new JLabel();
        btnAddMeasurement = new JButton();
        panelButtons = new JPanel();
        jSeparator1 = new JSeparator();
        btnCancel = new JButton();
        btnOk = new JButton();

        paneTablesAndCharts.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        paneTablesAndCharts.setOrientation(JSplitPane.VERTICAL_SPLIT);

        scrollSignificantScores.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tableSignificantScores.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollSignificantScores.setViewportView(tableSignificantScores);

        GroupLayout panelSignificantScoresLayout = new GroupLayout(panelSignificantScores);
        panelSignificantScores.setLayout(panelSignificantScoresLayout);
        panelSignificantScoresLayout.setHorizontalGroup(
            panelSignificantScoresLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelSignificantScoresLayout.createSequentialGroup()
                .addContainerGap()
                .add(scrollSignificantScores, GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelSignificantScoresLayout.setVerticalGroup(
            panelSignificantScoresLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelSignificantScoresLayout.createSequentialGroup()
                .addContainerGap()
                .add(scrollSignificantScores, GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        paneStatistics.addTab("Significant Scores", panelSignificantScores);

        lblAllScoreValuesFor.setText("Display values for");

        cboDisplayStats.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scrollAllScores.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblAllScores.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollAllScores.setViewportView(tblAllScores);

        GroupLayout panelAllScoresLayout = new GroupLayout(panelAllScores);
        panelAllScores.setLayout(panelAllScoresLayout);
        panelAllScoresLayout.setHorizontalGroup(
            panelAllScoresLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, panelAllScoresLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelAllScoresLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(GroupLayout.LEADING, scrollAllScores, GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .add(panelAllScoresLayout.createSequentialGroup()
                        .add(lblAllScoreValuesFor)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(cboDisplayStats, 0, 736, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAllScoresLayout.setVerticalGroup(
            panelAllScoresLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelAllScoresLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelAllScoresLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(lblAllScoreValuesFor)
                    .add(cboDisplayStats, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(scrollAllScores, GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );

        paneStatistics.addTab("All Scores", panelAllScores);

        lblHistogramForm.setText("Display histogram for");

        cboDisplayHistogram.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scrollHistogram.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblHistogram.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollHistogram.setViewportView(tblHistogram);

        GroupLayout panelHistogramLayout = new GroupLayout(panelHistogram);
        panelHistogram.setLayout(panelHistogramLayout);
        panelHistogramLayout.setHorizontalGroup(
            panelHistogramLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, panelHistogramLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelHistogramLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(GroupLayout.LEADING, scrollHistogram, GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .add(panelHistogramLayout.createSequentialGroup()
                        .add(lblHistogramForm)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(cboDisplayHistogram, 0, 720, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelHistogramLayout.setVerticalGroup(
            panelHistogramLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelHistogramLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelHistogramLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(lblHistogramForm)
                    .add(cboDisplayHistogram, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(scrollHistogram, GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );

        paneStatistics.addTab("Histogram", panelHistogram);

        paneTablesAndCharts.setTopComponent(paneStatistics);

        GroupLayout panelChartLayout = new GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(GroupLayout.LEADING)
            .add(0, 850, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(GroupLayout.LEADING)
            .add(0, 207, Short.MAX_VALUE)
        );

        paneTablesAndCharts.setRightComponent(panelChart);

        cboSecondary.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblSecondary.setText("Moving series");

        cboPrimary.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPrimary.setText("Fixed series");

        btnAddMeasurement.setText("Modify...");

        GroupLayout panelSelectionsLayout = new GroupLayout(panelSelections);
        panelSelections.setLayout(panelSelectionsLayout);
        panelSelectionsLayout.setHorizontalGroup(
            panelSelectionsLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelSelectionsLayout.createSequentialGroup()
                .add(panelSelectionsLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(lblSecondary)
                    .add(panelSelectionsLayout.createSequentialGroup()
                        .add(cboSecondary, 0, 338, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.UNRELATED)
                        .add(btnSwap)))
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(panelSelectionsLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(lblPrimary)
                    .add(GroupLayout.TRAILING, panelSelectionsLayout.createSequentialGroup()
                        .add(cboPrimary, 0, 337, Short.MAX_VALUE)
                        .add(37, 37, 37)
                        .add(btnAddMeasurement)))
                .addContainerGap())
        );
        panelSelectionsLayout.setVerticalGroup(
            panelSelectionsLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelSelectionsLayout.createSequentialGroup()
                .add(panelSelectionsLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(panelSelectionsLayout.createSequentialGroup()
                        .add(lblPrimary)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(panelSelectionsLayout.createParallelGroup(GroupLayout.LEADING)
                            .add(btnAddMeasurement)
                            .add(cboPrimary, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .add(panelSelectionsLayout.createSequentialGroup()
                        .add(lblSecondary)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(cboSecondary, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .add(btnSwap))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelSelectionsLayout.linkSize(new Component[] {btnAddMeasurement, btnSwap, cboPrimary, cboSecondary}, GroupLayout.VERTICAL);

        btnCancel.setText("Cancel");

        btnOk.setText("Apply Crossdate...");

        GroupLayout panelButtonsLayout = new GroupLayout(panelButtons);
        panelButtons.setLayout(panelButtonsLayout);
        panelButtonsLayout.setHorizontalGroup(
            panelButtonsLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelButtonsLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(jSeparator1, GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
                    .add(GroupLayout.TRAILING, panelButtonsLayout.createSequentialGroup()
                        .add(btnOk)
                        .addPreferredGap(LayoutStyle.UNRELATED)
                        .add(btnCancel)
                        .addContainerGap())))
        );
        panelButtonsLayout.setVerticalGroup(
            panelButtonsLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelButtonsLayout.createSequentialGroup()
                .add(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panelButtonsLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(btnCancel)
                    .add(btnOk)))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(GroupLayout.TRAILING)
                    .add(GroupLayout.LEADING, paneTablesAndCharts, GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
                    .add(GroupLayout.LEADING, panelSelections, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(GroupLayout.LEADING, panelButtons, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(panelSelections, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(paneTablesAndCharts, GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panelButtons, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected JButton btnAddMeasurement;
    protected JButton btnCancel;
    protected JButton btnOk;
    protected JButton btnSwap;
    protected JComboBox cboDisplayHistogram;
    protected JComboBox cboDisplayStats;
    protected JComboBox cboPrimary;
    protected JComboBox cboSecondary;
    protected JSeparator jSeparator1;
    protected JLabel lblAllScoreValuesFor;
    protected JLabel lblHistogramForm;
    protected JLabel lblPrimary;
    protected JLabel lblSecondary;
    protected JTabbedPane paneStatistics;
    protected JSplitPane paneTablesAndCharts;
    protected JPanel panelAllScores;
    protected JPanel panelButtons;
    protected JPanel panelChart;
    protected JPanel panelHistogram;
    protected JPanel panelSelections;
    protected JPanel panelSignificantScores;
    protected JScrollPane scrollAllScores;
    protected JScrollPane scrollHistogram;
    protected JScrollPane scrollSignificantScores;
    protected JTable tableSignificantScores;
    protected JTable tblAllScores;
    protected JTable tblHistogram;
    // End of variables declaration//GEN-END:variables

}
