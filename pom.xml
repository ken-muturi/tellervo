<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<!-- Metadata -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tellervo</groupId>
	<artifactId>tellervo</artifactId>
	<name>Tellervo</name>
	<description>Dendrochronological collection, curation and management software</description>
	<licenses>
		<license>
			<name>The GNU General Public License, Version 3.0</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Malcolm and Carolyn Wiener Laboratory for Aegean and Near Eastern Dendrochronology</name>
		<url>http://dendro.cornell.edu</url>
	</organization>
	<developers>
		<developer>
			<name>Peter Brewer</name>
			<email>p.brewer@cornell.edu</email>
			<roles>
				<role>Lead Developer</role>
			</roles>
			<organization>The Malcolm and Carolyn Wiener Laboratory for Aegean and Near Eastern
				Dendrochronology</organization>
			<organizationUrl>http://dendro.cornell.edu</organizationUrl>
		</developer>
		<developer>
			<name>Chris Dunham</name>
			<organization>The Epison Group</organization>
			<roles>
				<role>Inactive developer</role>
			</roles>
		</developer>
		<developer>
			<name>Dan Girshovich</name>
			<organization>The Malcolm and Carolyn Wiener Laboratory for Aegean and Near Eastern
				Dendrochronology</organization>
			<organizationUrl>http://dendro.cornell.edu</organizationUrl>
			<roles>
				<role>Student developer</role>
			</roles>				
		</developer>
		<developer>
			<name>Aaron Hamid</name>
			<email>aaron@incandescentsoftware.com</email>
			<organization>Incandescent Software LLC</organization>
			<organizationUrl>http://www.incandescentsoftware.com/</organizationUrl>
			<roles>
				<role>Inactive developer</role>
			</roles>
		</developer>
		<developer>
			<name>Ken Harris</name>
			<roles>
				<role>Inactive developer</role>
			</roles>			
		</developer>
		<developer>
			<name>Drew Kalina</name>
			<roles>
				<role>Inactive developer</role>
			</roles>			
		</developer>
		<developer>
			<name>Rocky Li</name>
			<organization>The Malcolm and Carolyn Wiener Laboratory for Aegean and Near Eastern
				Dendrochronology</organization>
			<organizationUrl>http://dendro.cornell.edu</organizationUrl>
			<roles>
				<role>Inactive developer</role>
			</roles>			
		</developer>
		<developer>
			<name>Lucas Madar</name>
			<roles>
				<role>Inactive developer</role>
			</roles>
			<organization>The Epison Group</organization>
		</developer>
		<developer>
			<name>Daniel Murphy</name>
			<email>daniel@dmurph.com</email>
			<organization>The Malcolm and Carolyn Wiener Laboratory for Aegean and Near Eastern
				Dendrochronology</organization>
			<organizationUrl>http://dendro.cornell.edu</organizationUrl>
			<roles>
				<role>Student developer</role>
			</roles>				
		</developer>
		<developer>
			<name>Robert 'Mecki' Pohl</name>
			<roles>
				<role>Inactive developer</role>
			</roles>	
		</developer>
		<developer>
			<name>Kit Sturgeon</name>
			<email>kit@episongroup.com</email>
			<organization>The Epison Group</organization>
			<roles>
				<role>Consultant</role>
			</roles>				
		</developer>
	</developers>
	<scm>
		<connection>scm:svn:http://svn.code.sf.net/p/tellervo/code-0/trunk</connection>
		<developerConnection>scm:svn:http://svn.code.sf.net/p/tellervo/code-0/trunk</developerConnection>
		<url>http://www.tellervo.org</url>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>HH:mm dd-MMM-yyyy</maven.build.timestamp.format>
    	<timestamp>${maven.build.timestamp}</timestamp>
    	<serverversion>1.1.0</serverversion>
	</properties>

	<!--  Repository to deploy to.  When deploying make sure your .m2/settings.xml
	 file contains the correct username and password for the repository server -->
	<distributionManagement>
		<repository>
			<id>tridas-releases</id>
			<url>http://maven.tridas.org/repository/tridas-releases/</url>
		</repository>
		<snapshotRepository>
			<id>tridas-snapshots</id>
			<url>http://maven.tridas.org/repository/tridas-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- Packages that this project depends upon-->
	<dependencies>

		<!-- 3D Mapping library -->		
		<dependency>
			<groupId>gov.nasa.worldwind</groupId>
			<artifactId>worldwind</artifactId>
			<version>0.6.874.15796</version>			
		</dependency>
		    
	    <!-- Geospatial Data Abstraction Library required by
	    WWJ.  Unknown version taken from the WWJ  -->
	    <dependency>
	      <groupId>org.osgeo</groupId>
	      <artifactId>gdal</artifactId>
	      <version>0.1</version>
	    </dependency>

		<!-- PDF Creation library -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Logger -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>-->
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jpedal</groupId>
			<artifactId>jpedal</artifactId>
			<version>4.45-b-105</version>
		</dependency>
		<dependency>
			<groupId>com.l2fprod.common</groupId>
			<artifactId>l2fprod-common-buttonbar</artifactId>
			<version>6.9.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.l2fprod.common</groupId>
			<artifactId>l2fprod-common-fontchooser</artifactId>
			<version>6.9.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Diverts System.out calls to logger can be removed
		once code has been refactored to use proper logger calls -->
		<dependency>
			<groupId>uk.org.lidalia</groupId>
			<artifactId>sysout-over-slf4j</artifactId>
			<version>1.0.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.kenai.nbpwr</groupId>
			<artifactId>com-sun-pdfview</artifactId>
			<version>1.0.5-201003191900</version>
			<type>nbm</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swing-layout</artifactId>
			<version>1.0.3</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.l2prod.common</groupId>
			<artifactId>l2fprod-common-sheet</artifactId>
			<version>6.9.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code</groupId>
			<artifactId>jsyntaxpane</artifactId>
			<version>0.9.5</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Serial port library -->
		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>2.1.7</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>        
		<!-- 3D Graphics for Mapping  -->
		<dependency>
            <groupId>org.processing</groupId>
            <artifactId>jogl</artifactId>
            <version>1.5.r0196</version>	
        </dependency> 
        <dependency>
            <groupId>org.processing</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>1.5.r0196</version>	
        </dependency> 
		
		<dependency>
			<groupId>org.netbeans.api</groupId>
			<artifactId>org-netbeans-swing-outline</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.7.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.dmurph.mvc</groupId>
			<artifactId>java-simple-mvc</artifactId>
			<version>1.4.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		 
		<dependency>
			<groupId>de.micromata.jak</groupId>
			<artifactId>JavaAPIforKml</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jaxb-impl</artifactId>
					<groupId>com.sun.xml.bind</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jaxb-xjc</artifactId>
					<groupId>com.sun.xml.bind</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.tridas</groupId>
			<artifactId>dendrofileio</artifactId>
			<version>1.0.6-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.tridas</groupId>
			<artifactId>tricycle</artifactId>
			<version>0.2.7</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>pljava-public</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.axiom</groupId>
			<artifactId>axiom-jaxen-testsuite</artifactId>
			<version>1.2.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<build>
	
		<!-- Create launch scripts for Linux builds with correct version number -->
		<resources>
		
		      <resource>
		        <!-- Do not alter log4j.xml file -->
		        <directory>src/main/resources</directory>
		        <filtering>false</filtering>
		        <includes>
		          <include>**/log4j.xml</include>
		        </includes>
		      </resource>
		      <resource>
		        <!-- Replace placeholders in other files -->
		        <directory>src/main/resources</directory>
		        <filtering>true</filtering>
		        <excludes>
		          <exclude>**/*.xml</exclude>
		        </excludes>
		      </resource>
	
		    <resource>
		  		<directory>Native/BuildResources/</directory>
		  		<filtering>true</filtering>
		  	</resource>
		</resources>
		
	
		<plugins>
		
		    <!-- Check the code is up-to-date and grab SVN version number -->
			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>buildnumber-maven-plugin</artifactId>
			  <executions>
			    <execution>
			      <phase>validate</phase>
			      <goals>
			        <goal>create</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			    <doCheck>false</doCheck>
			    <doUpdate>false</doUpdate>
			  </configuration>
			</plugin>
		
		
			<!-- JAXB -->
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.7.3</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>

					<args>
						<arg>-extension</arg>
						<arg>-no-header</arg>
						<arg>-XtoString</arg>
						<arg>-Xequals</arg>
						<arg>-XhashCode</arg>
						<arg>-Xcopyable</arg>
						<arg>-Xifins</arg>
						<arg>-Xtridas-annotations</arg>
						<arg>-Xcollection-setter-injector</arg>
						<arg>-Xannotate</arg>
					</args>

					<schemaDirectory>src/main/resources/schemas</schemaDirectory>
					<bindingDirectory>src/main/resources/binding</bindingDirectory>
					<generateDirectory>src/main/generated</generateDirectory>
					<verbose>true</verbose>

					<plugins>
						<plugin>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-basics</artifactId>
							<version>0.6.1</version>
						</plugin>
					</plugins>

				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>jaxb2-basics-runtime</artifactId>
						<version>0.6.1</version>
					</dependency>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>xjc-if-ins</artifactId>
						<version>0.5.2</version>
					</dependency>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>jaxb2-basics-annotate</artifactId>
						<version>0.6.1</version>
					</dependency>
					<dependency>
						<groupId>org.tridas.schema</groupId>
						<artifactId>tridasaandi</artifactId>
						<version>1.0</version>
					</dependency>
					<dependency>
						<groupId>org.tridas.schema</groupId>
						<artifactId>tridas-annotations</artifactId>
						<version>1.0</version>
					</dependency>
					<dependency>
						<groupId>com.sun.tools.xjc</groupId>
						<artifactId>collection-setter-injector</artifactId>
						<version>0.1</version>
					</dependency>
					<dependency>
						<groupId>org.tridas</groupId>
						<artifactId>tridasjlib</artifactId>
						<version>1.22.3</version>
					</dependency>
				</dependencies>
			</plugin>

		  <!-- Include resources  -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-resources-plugin</artifactId>
	        <version>2.5</version>
	      </plugin> 

			<!-- Reconfigure "clean" in Maven not to delete target directory -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<fileset>
							<directory>target</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<excludes>
								<exclude>**/.svn</exclude>
							</excludes>
						</fileset>
						<fileset>
				          <directory>src/main/generated</directory>
				          <includes>
				            <include>**/*.java</include>
				          </includes>
				          <excludes>
								<exclude>**/.svn</exclude>
							</excludes>
				          <followSymlinks>false</followSymlinks>
				        </fileset>
					</filesets>
				</configuration>
			</plugin>

			 
			<!-- <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-javadoc-plugin</artifactId>
			  <version>2.7</version>
			  <executions>
			    <execution>
			      <id>attach-javadocs</id>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>-->
			
			
			<plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-jar-plugin</artifactId>
		      <configuration>
		        <archive>
		          <manifest>
		            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
		          </manifest>
		            <manifestEntries>
		              <Implementation-Build>${buildNumber}</Implementation-Build>
		              <Implementation-Build-Timestamp>${maven.build.timestamp}</Implementation-Build-Timestamp>
		            </manifestEntries>
		        </archive>
		      </configuration>
		    </plugin>
						
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-source-plugin</artifactId>
			  <version>2.1.2</version>
			  <executions>
			    <execution>
			      <id>attach-sources</id>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>

			<!-- Compile application -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<excludes>
						<exclude>**/edu/cornell/dendro/cpgdb/*</exclude>
						<exclude>**/edu/cornell/dendro/webservice/*</exclude>
					</excludes>
					<!-- <include>/native/Libraries</include>-->
					<optimise>true</optimise>
					<debug>true</debug>
				</configuration>
			</plugin>


			<!--  Use shade to create a single jar containing all the dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.3.3</version>
				<executions>
					<execution>
						<id>clientjar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.tellervo.desktop.gui.Startup</mainClass>
								</transformer>
							</transformers>
							<filters>
								<!-- Remove signatures from other jars-->
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--  Create a Windows native executable 
			      n.b. this creates a raw executable, not an installer. 
			      The installer is created with an Ant task -->
		 	<plugin>
				<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
				<artifactId>launch4j-plugin</artifactId>
				<version>1.5.0.0</version>
				<executions>
					<execution>
						<id>launch4j-32bit</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<dontWrapJar>false</dontWrapJar>
							<headerType>gui</headerType>
							<outfile>${project.build.directory}/${project.build.finalName}.exe</outfile>
							<jar>${project.build.directory}/${project.build.finalName}.jar</jar>
							<icon>src/main/resources/Icons/tellervo-application.ico</icon>
							<errTitle>Tellervo</errTitle>
							<jre>
								<minVersion>1.6.0</minVersion>
							</jre>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Create a MacOSX native executable 
			     n.b. on Linux and Windows this will create an *app.zip file
			          on MacOSX it will also create a DMG file. Also not that
			          on Linux and Windows computers the App will not include
			          the Apple integration portions therefore they will have
			          an ugly menu bar. -->
			<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>osxappbundle-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <configuration>
                    <mainClass>org.tellervo.desktop.gui.Startup</mainClass>
                    <iconFile>src/main/resources/Icons/tellervo-application.icns</iconFile>
                    <jvmVersion>1.5+</jvmVersion>
                    <bundleName>${project.name}</bundleName>
                    <javaApplicationStub>Native/BuildResources/MacBuild/JavaApplicationStub</javaApplicationStub>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
               </executions>
           </plugin>
           
            <!-- 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>osxappbundle-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<configuration>
					 <additionalResources>
						<fileSet>
							<directory>src/main/resources/Licenses</directory>
							<includes>
								<include>license.txt</include>
							</includes>
						</fileSet>
						<fileSet>
							<directory>Documentation/</directory>
							<includes>
								<include>tellervo-manual.pdf</include>
							</includes>
						</fileSet>
						<fileSet>
							<directory>${project.build.directory}/classes/MacBuild</directory>
							<includes>
								<include>Tellervo Drivers.pkg</include>
							</includes>
						</fileSet>
					</additionalResources>
					<bundleName>Tellervo</bundleName>
					<zipFile>${project.build.directory}/mac-app.zip</zipFile>
					<mainClass>org.tellervo.desktop.gui.Startup</mainClass>
					<jvmVersion>1.5+</jvmVersion>
					<iconFile>src/main/resources/Icons/tellervo-application.icns</iconFile>
					<javaApplicationStub>${project.build.directory}/classes/MacBuild/JavaApplicationStub</javaApplicationStub>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>bundle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->
			
			
			<!--  Create a Linux Ubuntu debian native installer -->
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>0.8</version>
				<executions>
				
					<!-- Desktop Installer -->
					<execution>
						<id>deb-desktop-build</id>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<deb>${project.build.directory}/binaries/desktop/${project.version}/Linux/${project.build.finalName}.deb</deb>
							<controlDir>${project.build.directory}/classes/LinBuild/DesktopControl/</controlDir>
							<dataSet>
								<data>
									<src>${project.build.directory}/${project.build.finalName}.jar</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo</prefix>
									</mapper>
								</data>							
								<data>
									<src>${project.build.directory}/classes/LinBuild/tellervo</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/bin/</prefix>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<src>${project.build.directory}/classes/LinBuild/tellervo.desktop</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/applications/</prefix>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<src>src/main/resources/Icons/256x256/tellervo-application.png</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/pixmaps/</prefix>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
					
					<!-- Server installer -->
					<execution>
						<id>deb-server-build</id>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>	
							<deb>${project.build.directory}/binaries/server/${serverversion}/Linux/tellervo-server-${serverversion}.deb</deb>
							<controlDir>${project.build.directory}/classes/LinBuild/ServerControl/</controlDir>
							<dataSet>
								<data>
									<src>${project.build.directory}/classes/LinBuild/tellervo-server</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/bin</prefix>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<src>${project.build.directory}/tellervo-pljava.jar</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo-server/</prefix>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<src>${project.build.directory}/classes/LinBuild/tellervo-apache</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo-server/</prefix>
										<filemode>755</filemode>
									</mapper>
								</data>								
								<data>
									<src>Databases/db-upgrade-patches</src>
									<type>directory</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo-server/db-upgrade-patches</prefix>
									</mapper>
								</data>
								<data>
									<src>Databases/db-templates</src>
									<type>directory</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo-server</prefix>
									</mapper>
								</data>
								<data>
									<src>Native/BuildResources/LinBuild/firstrun</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/tmp</prefix>
										<filemode>777</filemode>
									</mapper>
								</data>
								<data>
									<src>src/main/php/config.php.template</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/tellervo-server</prefix>
									</mapper>
								</data>
								<data>
									<src>src/main/php</src>
									<type>directory</type>
									<mapper>
										<type>perm</type>
										<prefix>/var/www/tellervo</prefix>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<!-- Nasty kludge fixes.  Tasks that Maven can 
			not perform are	done by running Ant instead-->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
				  
				
					<!-- Delete the duplicate TRiDaS and GML 
					classes produced by JAXB when creating the Tellervo classes. -->
					<execution>
						<id>DeleteDuplicateJAXBClasses</id>
						<phase>generate-sources</phase>
						<configuration>
							<task>
								<echo>Removing extra JAXB generated classes...</echo>
							</task>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath"/>
								<delete dir="src/main/generated/net"/>
								<delete dir="src/main/generated/org/tridas"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					
					
					<!-- Strip duplicate deps from MacOSX bundle, and add native libraries
					     manual and license files.  Finally zip up and move into binaries folder -->	 
					<execution>
					  <id>AddLibsToMacOSXApp</id>
					  <phase>package</phase>
					  <configuration>
					  	<tasks>
						  <taskdef resource="net/sf/antcontrib/antcontrib.properties"
							  classpathref="maven.plugin.classpath"/>	
								  
								  <trycatch>  
								  <try>
									  <!-- Create the binary folder to hold the MacOSX package -->
									  <mkdir dir="${project.build.directory}/binaries/desktop/${project.version}/MacOSX"/>
									  
									  <!-- Delete the seperate dependencies as they are included in the Tellervo jar -->
									  <delete dir="${project.build.directory}/${project.build.finalName}/Tellervo.app/Contents/Resources/Java/repo"/>
									  				
									  <!-- Copy in to our build folder the Tellervo jar -->				
									  <copy file="${project.build.directory}/${project.build.finalName}.jar"		
									  		todir="${project.build.directory}/${project.build.finalName}/Tellervo.app/Contents/Resources/Java/"/>		
									  								  
									  <!-- Create the app.zip file from our build folder -->								  
									  <zip destfile="${project.build.directory}/binaries/desktop/${project.version}/MacOSX/${project.build.finalName}.zip" update="false">
									  	<fileset dir="${project.build.directory}/${project.build.finalName}" includes="Tellervo.app/**"/>
									  </zip>
									  
									  <!-- Add license, manual and native package into the root of the zip -->
									  <zip destfile="${project.build.directory}/binaries/desktop/${project.version}/MacOSX/${project.build.finalName}.zip" update="true">
									  	     <fileset dir="Native/BuildResources/MacBuild/NativePackages/" includes="**/*.pkg"/>
									  		 <fileset dir="${project.build.directory}/classes/Licenses/" includes="**/license.txt"/>
									  		 <fileset dir="Documentation" includes="**/tellervo-manual.pdf"/>
									  </zip>
								  </try>
								  <catch>
									<echo>*********************************</echo>
								    <echo> UNABLE TO COMPLETE THIS TASK    </echo>
								 	<echo> Error building MacOSX pacakage  </echo>
								 	<echo>*********************************</echo>
								 	<sleep seconds="5"/>
								  </catch>
								  </trycatch>
						  </tasks>	  
					  </configuration>
					  <goals>
						  <goal>run</goal>
					  </goals>					
				  </execution>
					
					
					<!-- Run Makensis to create the windows installers -->
			 	    <execution>
						<id>RunNSIS</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
								<trycatch>
							    <try>
								      <mkdir dir="${project.build.directory}/binaries/desktop/${project.version}/Windows"/>
								      <mkdir dir="${project.build.directory}/binaries/desktop/${project.version}/Windows64"/>
								      <exec dir="${project.build.directory}/classes/WinBuild" executable="makensis">  
								        <arg value="nsis-32bit.nsi"/>  
								      </exec>  
								      <exec dir="${project.build.directory}/classes/WinBuild" executable="makensis">  
								        <arg value="nsis-64bit.nsi"/>  
								      </exec>  
								 </try>
								 <catch>
								    <echo>**********************************************</echo>
								    <echo> UNABLE TO COMPLETE THIS TASK                 </echo>
								 	<echo> makensis is not available on this computer   </echo>
								 	<echo> Windows installer package will not be created</echo>
								 	<echo>**********************************************</echo>
								 	<sleep seconds="5"/>
								 </catch>
								 </trycatch>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>					
					</execution>
					
					<execution>
						<id>CopyJarFile</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath"/>
							      <mkdir dir="${project.build.directory}/binaries/desktop/${project.version}/Java"/>
							      <copy file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/binaries/desktop/${project.version}/Java/${project.build.finalName}.jar" failonerror="false"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>					
					</execution>
					
					
					<execution>
						<id>BuildPLJavaJar</id>
						<phase>compile</phase>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath"/>							     
							      
							      <jar jarfile="${project.build.directory}/tellervo-pljava.jar"
								       basedir="${project.build.directory}/classes"
								       includes="org/tellervo/cpgdb/** org/tellervo/indexing/**"/>
							      
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>					
					</execution>
					
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.6.5</version>
					</dependency>
			          <dependency>
			            <groupId>ant</groupId>
			            <artifactId>ant-jsch</artifactId>
			            <version>1.6.5</version>
			          </dependency>
			          <dependency>
			            <groupId>com.jcraft</groupId>
			            <artifactId>jsch</artifactId>
			            <version>0.1.42</version>
			          </dependency>
				</dependencies>
			</plugin>

		</plugins>



		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.jvnet.jaxb2.maven2
										</groupId>
										<artifactId>
											maven-jaxb2-plugin
										</artifactId>
										<versionRange>
											[0.7.3,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
<!-- 
		<repository>
		  <id>maven.iscpif.fr</id>
		  <url>http://maven.iscpif.fr/snapshots</url>
		</repository>
		<repository>
		  <id>thirdparty.maven.iscpif.fr</id>
		  <url>http://maven.iscpif.fr/thirdparty/</url>
		</repository>

		<repository>
			<id>repo1.maven.org</id>
			<url>http://repo1.maven.org/maven2/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>

		<repository>
			<id>geotk</id>
			<name>Geotk</name>
			<url>http://maven.geotoolkit.org/</url>
		</repository>
-->
		<repository>
			<id>tridas-releases</id>
			<name>TRiDaS Maven Releases Repository</name>
			<url>http://maven.tridas.org/repository/tridas-releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>tridas-snapshots</id>
			<name>TRiDaS Maven Snapshots Repository</name>
			<url>http://maven.tridas.org/repository/tridas-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- 
		    <repository>
      <id>m2-copy</id>
      <name>m2-copy</name>
      <url>http://maven.tridas.org/repository/m2-copy/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
		
		<repository>
			<id>maven.geomajas.org</id>
			<name>Geomajas repository for JPedal</name>
			<url>http://maven.geomajas.org/</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
-->
	</repositories>

	

	<pluginRepositories>
		
		<pluginRepository>
			<id>tridas-releases</id>
			<name>TRiDaS Maven Releases Repository</name>
			<url>http://maven.tridas.org/repository/tridas-releases/</url>
		</pluginRepository>
		
		<pluginRepository>
			<id>tridas-snapshots</id>
			<name>TRiDaS Maven Snapshots Repository</name>
			<url>http://maven.tridas.org/repository/tridas-snapshots/</url>
		</pluginRepository>
		
		<!-- <pluginRepository>
		      <id>m2-copy</id>
		      <name>m2-copy</name>
		      <url>http://maven.tridas.org/repository/m2-copy/</url>
		</pluginRepository>	
		
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>

		<pluginRepository>
			<id>maven-repository.dev.java.net</id>
			<name>Java.net Maven 1 Repository (legacy)</name>
			<url>http://download.java.net/maven/1</url>
		</pluginRepository>-->

	</pluginRepositories>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.micromata.jak</groupId>
				<artifactId>JavaAPIforKml</artifactId>
				<version>2.2.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<issueManagement>
		<url>https://sourceforge.net/p/tellervo/tickets/</url>
		<system>Sourceforge.net</system>
	</issueManagement>
	<version>1.0.2-SNAPSHOT</version>
</project>
